{"version":3,"sources":["layout/index.tsx","themes/themes.ts","constants.ts","themes/Context.ts","editor/interfaces.ts","Options.ts","themes/ThemeManager.tsx","hooks/storageHooks.ts","components/Checkbox.tsx","editor/elements/Check.tsx","editor/elements/Paragraph.tsx","editor/Element.tsx","components/Toggle.tsx","components/ThemeToggle.tsx","themes/hooks.ts","AppTopBar.tsx","components/LoadingDots.tsx","App.tsx","editor/withCheck.ts","serviceWorker.ts","index.tsx"],"names":["ThemeType","MainContainer","styled","div","NotesContainer","props","theme","colors","themeLight","STORAGE_KEY","Themes","Dark","themePrimary","themeLighterAlt","themeLighter","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","Light","SwitchThemeContext","createContext","ElementType","defaultOptions","Options","state","storedData","store","get","OPTIONS","this","JSON","parse","save","asString","stringify","set","ThemeManager","children","useState","themeType","getTheme","setTheme","themeContextValue","useMemo","toggleTheme","t","nextType","useTheme","Provider","value","getStateFromStorage","STATE","type","Check","text","Container","attrs","contentEditable","p","CheckMark","span","checked","CheckText","SCheckbox","onClick","className","forwardRef","ref","element","cElement","editor","useEditor","useCallback","path","ReactEditor","findPath","Transforms","setNodes","at","suppressContentEditableWarning","Paragraph","componentByElement","Element","attributes","eType","Component","Toggle","ReactToggle","icons","ThemeToggle","useContext","ThemeContext","isLight","onChange","Loading","fill","viewBox","xmlns","cx","cy","r","attributeName","from","to","begin","dur","values","calcMode","repeatCount","fillOpacity","display","TopBar","saving","create","compose","defaultInsertBreak","insertBreak","selection","end","Range","parentNodeEntry","Editor","parent","withReact","createEditor","App","useAndroidPlugin","setValue","setSaving","debouncedSaving","debounce","stateString","flush","setTimeout","useSaveOnLocalStorage","next","onBlur","renderElement","autoFocus","spellCheck","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.26325c27.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const MainContainer = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`\n\nexport const NotesContainer = styled.div`\n  flex: 1;\n  width: 100%;\n  min-height: 1px;\n  padding: 12px;\n  box-sizing: border-box;\n  background: ${(props) => props.theme.colors.themeLight};\n  overflow-x: scroll;\n`\n","import { DefaultTheme, ThemedStyledProps } from 'styled-components'\n\nexport type DefaultThemedStyledProps<T> = ThemedStyledProps<T, DefaultTheme>\n\nexport enum ThemeType {\n  Dark = 'dark',\n  Light = 'light',\n}\n\nconst Dark: DefaultTheme = {\n  colors: {\n    themePrimary: '#8d7ec4',\n    themeLighterAlt: '#060508',\n    themeLighter: '#17141f',\n    themeLight: '#2a263b',\n    themeTertiary: '#554b76',\n    themeSecondary: '#7c6fad',\n    themeDarkAlt: '#9789ca',\n    themeDark: '#a599d2',\n    themeDarker: '#bbb1de',\n    neutralLighterAlt: '#282828',\n    neutralLighter: '#313131',\n    neutralLight: '#3f3f3f',\n    neutralQuaternaryAlt: '#484848',\n    neutralQuaternary: '#4f4f4f',\n    neutralTertiaryAlt: '#6d6d6d',\n    neutralTertiary: '#e0e0e0',\n    neutralSecondary: '#e5e5e5',\n    neutralPrimaryAlt: '#eaeaea',\n    neutralPrimary: '#d1d1d1',\n    neutralDark: '#f4f4f4',\n    black: '#f9f9f9',\n    white: '#1f1f1f',\n  },\n}\n\nconst Light: DefaultTheme = {\n  colors: {\n    themePrimary: '#4d4dd1',\n    themeLighterAlt: '#f7f7fd',\n    themeLighter: '#dfdff8',\n    themeLight: '#c4c4f1',\n    themeTertiary: '#8d8de3',\n    themeSecondary: '#6060d7',\n    themeDarkAlt: '#4646bc',\n    themeDark: '#3b3b9f',\n    themeDarker: '#2b2b75',\n    neutralLighterAlt: '#ecedf1',\n    neutralLighter: '#e8e9ed',\n    neutralLight: '#dfe0e3',\n    neutralQuaternaryAlt: '#cfd1d3',\n    neutralQuaternary: '#c6c7ca',\n    neutralTertiaryAlt: '#bebfc2',\n    neutralTertiary: '#595959',\n    neutralSecondary: '#373737',\n    neutralPrimaryAlt: '#2f2f2f',\n    neutralPrimary: '#000000',\n    neutralDark: '#151515',\n    black: '#0b0b0b',\n    white: '#f2f4f7',\n  },\n}\n\nexport const Themes = {\n  [ThemeType.Dark]: Dark,\n  [ThemeType.Light]: Light,\n}\n","export enum STORAGE_KEY {\n  STATE = 'STATE',\n  OPTIONS = 'OPTIONS',\n}\n\nexport const DEBOUNCED_SAVE_WAIT = 3000\n","import { createContext } from 'react'\n\nexport interface SwitchThemeContextProps {\n  toggleTheme: () => void\n}\n\nexport const SwitchThemeContext = createContext({} as SwitchThemeContextProps)\n","import { Element } from 'slate'\n\nexport enum ElementType {\n  Check = 'check',\n  Paragraph = 'paragraph',\n}\n\nexport interface CustomElement extends Element {\n  type?: ElementType\n}\n","import store from 'store2'\nimport { STORAGE_KEY } from './constants'\nimport { ThemeType } from './themes/themes'\n\ninterface IOptions {\n  theme: ThemeType\n}\n\nconst defaultOptions: IOptions = {\n  theme: ThemeType.Light,\n}\n\nclass OptionsCls {\n  private readonly state: IOptions\n  constructor() {\n    const storedData = store.get(STORAGE_KEY.OPTIONS)\n    if (storedData) {\n      this.state = JSON.parse(storedData)\n    } else {\n      this.state = defaultOptions\n    }\n  }\n\n  public getTheme() {\n    return this.state.theme\n  }\n\n  public setTheme(theme: ThemeType) {\n    this.state.theme = theme\n    this.save()\n  }\n\n  private save() {\n    const asString = JSON.stringify(this.state)\n    store.set(STORAGE_KEY.OPTIONS, asString)\n  }\n}\n\nexport const Options = new OptionsCls()\n","import React, { FC, useMemo, useState } from 'react'\nimport { DefaultTheme, ThemeProvider } from 'styled-components'\nimport { Themes, ThemeType } from './themes'\nimport { EmptyProps } from '../common'\nimport { SwitchThemeContext, SwitchThemeContextProps } from './Context'\nimport { Options } from '../Options'\n\nconst useTheme = () => {\n  const [theme, setTheme] = useState<DefaultTheme>(() => {\n    const themeType = Options.getTheme()\n    return Themes[themeType]\n  })\n  const themeContextValue: SwitchThemeContextProps = useMemo(() => {\n    return {\n      toggleTheme: () => {\n        setTheme((t) => {\n          const isDark = t === Themes[ThemeType.Dark]\n          const nextType = isDark ? ThemeType.Light : ThemeType.Dark\n          Options.setTheme(nextType)\n          return Themes[nextType]\n        })\n      },\n    }\n  }, [setTheme])\n\n  return {\n    theme,\n    themeContextValue,\n  }\n}\n\nexport const ThemeManager: FC<EmptyProps> = ({ children }) => {\n  const { theme, themeContextValue } = useTheme()\n  return (\n    <SwitchThemeContext.Provider value={themeContextValue}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </SwitchThemeContext.Provider>\n  )\n}\n","import debounce from 'lodash/debounce'\nimport store from 'store2'\nimport { useState, useCallback } from 'react'\nimport { Node } from 'slate'\nimport { DEBOUNCED_SAVE_WAIT, STORAGE_KEY } from '../constants'\nimport { ElementType } from '../editor/interfaces'\n\nconst getStateFromStorage: () => Node[] = () => {\n  const state = store.get(STORAGE_KEY.STATE)\n  if (state) {\n    return JSON.parse(state)\n  }\n  return [\n    {\n      type: ElementType.Check,\n      children: [{ text: 'Type here...' }],\n    },\n  ]\n}\n\nexport const useAppState = () => {\n  return useState<Node[]>(getStateFromStorage)\n}\n\ntype SaveType = (state: Node[]) => void\n\nexport const useSaveOnLocalStorage = () => {\n  const [saving, setSaving] = useState(false)\n  const debouncedSaving = useCallback(\n    debounce((state: Node[]) => {\n      const stateString = JSON.stringify(state)\n      store.set(STORAGE_KEY.STATE, stateString)\n      setSaving(false)\n    }, DEBOUNCED_SAVE_WAIT),\n    [setSaving]\n  )\n  const save: SaveType = useCallback(\n    (state) => {\n      setSaving(true)\n      debouncedSaving(state)\n    },\n    [setSaving, debouncedSaving]\n  )\n\n  const flush = useCallback(() => {\n    setTimeout(() => {\n      debouncedSaving.flush()\n    }, 50)\n  }, [debouncedSaving])\n\n  return {\n    save,\n    saving,\n    flush,\n  }\n}\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { DefaultThemedStyledProps } from '../themes/themes'\n\ninterface ICheckbox {\n  checked: boolean\n  onClick: () => void\n  className?: string\n}\n\ninterface IContainer {\n  onClick?: () => void\n  className?: string\n}\n\nconst getColor = (p: DefaultThemedStyledProps<IContainer>) => p.theme.colors.themeDarker\nconst getBorderColor = (p: DefaultThemedStyledProps<IContainer>) =>\n  p.theme.colors.themePrimary\n\nconst Container = styled.div.attrs({\n  contentEditable: false,\n})`\n  height: 14px;\n  min-height: 14px;\n  max-height: 14px;\n  min-width: 14px;\n  max-width: 14px;\n  width: 14px;\n  background: transparent;\n  border: 2px solid ${getBorderColor};\n  position: relative;\n  color: ${getColor};\n  user-select: none;\n`\n\ninterface ICheckMark {\n  checked: boolean\n}\n\nconst getDisplayCheckmark = (p: DefaultThemedStyledProps<ICheckMark>) =>\n  p.checked ? 'block' : 'none'\n\nconst CheckMark = styled.span`\n  display: ${getDisplayCheckmark};\n  position: absolute;\n  top: -12px;\n  font-weight: bolder;\n  font-size: 26px;\n`\n\nexport const Checkbox: FC<ICheckbox> = ({ checked, onClick, className = '' }) => {\n  return (\n    <Container onClick={onClick} className={className}>\n      <CheckMark checked={checked}>&#x2713;</CheckMark>\n    </Container>\n  )\n}\n","import React, { forwardRef, ForwardRefRenderFunction, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Checkbox } from '../../components/Checkbox'\nimport { CustomElement } from '../interfaces'\nimport { ReactEditor, useEditor } from 'slate-react'\nimport { Transforms } from 'slate'\nimport { DefaultThemedStyledProps } from '../../themes/themes'\nimport { Node } from 'slate'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 5px;\n`\n\ninterface ICheckText {\n  checked: boolean\n}\n\nconst getTextDecoration = (p: DefaultThemedStyledProps<ICheckText>) =>\n  p.checked ? 'line-through' : 'none'\n\nconst CheckText = styled.span.attrs({\n  contentEditable: true,\n})`\n  color: ${(p) => p.theme.colors.black};\n  text-decoration: ${getTextDecoration};\n  &:focus {\n    outline: none;\n  }\n`\n\nexport interface ICheckElement extends CustomElement {\n  checked?: boolean\n}\n\ninterface ICheck {\n  element: Node\n}\n\nconst SCheckbox = styled(Checkbox)`\n  margin: 3px 12px 0 0;\n`\n\nconst Check_: ForwardRefRenderFunction<HTMLDivElement, ICheck> = (\n  { children, element, ...rest },\n  ref\n) => {\n  const cElement = element as ICheckElement\n  const editor = useEditor()\n  const onClick = useCallback(() => {\n    const path = ReactEditor.findPath(editor, element)\n    const { checked } = element\n    Transforms.setNodes(editor, { checked: !checked }, { at: path })\n  }, [editor, element])\n  const { checked = false } = cElement\n  return (\n    <Container ref={ref}>\n      <SCheckbox checked={checked} onClick={onClick} />\n      <CheckText checked={checked} suppressContentEditableWarning>\n        {children}\n      </CheckText>\n    </Container>\n  )\n}\n\nexport const Check = forwardRef(Check_)\n","import styled from 'styled-components'\n\nexport const Paragraph = styled.p`\n  color: ${(p) => p.theme.colors.black};\n`\n","import React from 'react'\nimport { CustomElement, ElementType } from './interfaces'\nimport { Check, Paragraph } from './elements'\n\ninterface IElement {\n  attributes: any\n  element: CustomElement\n}\n\nconst componentByElement = {\n  [ElementType.Check]: Check,\n  [ElementType.Paragraph]: Paragraph,\n}\n\nexport const Element: React.FC<IElement> = ({ attributes, element, children }) => {\n  const eType = element.type ?? ElementType.Paragraph\n  const Component = componentByElement[eType]\n  return (\n    <Component {...attributes} element={element}>\n      {children}\n    </Component>\n  )\n}\n","import styled from 'styled-components'\nimport ReactToggle from 'react-toggle'\nimport 'react-toggle/style.css'\n\nexport const Toggle = styled(ReactToggle).attrs({\n  icons: false,\n})`\n  &.react-toggle--checked .react-toggle-track {\n    background: ${(props) => props.theme.colors.themeLight};\n  }\n  &.react-toggle--checked:hover .react-toggle-track {\n    background: ${(props) => props.theme.colors.themeLighter};\n  }\n  &.react-toggle .react-toggle-track {\n    background: ${(props) => props.theme.colors.themeLight};\n  }\n  &.react-toggle:hover .react-toggle-track {\n    background: ${(props) => props.theme.colors.themeLighter};\n  }\n`\n","import React, { FC } from 'react'\nimport { Toggle } from './Toggle'\nimport { EmptyProps } from '../common'\nimport { useSwitchThemeContext, useTheme } from '../themes/hooks'\nimport { ThemeType, Themes } from '../themes/themes'\n\nexport const ThemeToggle: FC<EmptyProps> = () => {\n  const theme = useTheme()\n  const { toggleTheme } = useSwitchThemeContext()\n  const isLight = theme === Themes[ThemeType.Light]\n  return <Toggle onChange={toggleTheme} checked={isLight} />\n}\n","import { ThemeContext } from 'styled-components'\nimport { useContext } from 'react'\nimport { SwitchThemeContext } from './Context'\n\nexport const useSwitchThemeContext = () => useContext(SwitchThemeContext)\nexport const useTheme = () => useContext(ThemeContext)\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { ThemeToggle } from './components/ThemeToggle'\nimport { LoadingDots } from './components/LoadingDots'\nimport { DefaultThemedStyledProps } from './themes/themes'\n\nconst Container = styled.div`\n  min-height: 36px;\n  padding: 0 6px;\n  background: ${(props) => props.theme.colors.themeDarker};\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`\n\ninterface ILoading {\n  display: boolean\n}\n\nconst getDisplay = (p: DefaultThemedStyledProps<ILoading>) =>\n  p.display ? 'block' : 'none'\n\nconst Loading = styled(LoadingDots).attrs((p) => ({\n  fill: p.theme.colors.themeSecondary,\n}))`\n  height: 30px;\n  min-height: 30px;\n  width: 30px;\n  min-width: 30px;\n  display: ${getDisplay};\n`\n\ninterface IAppTopBar {\n  saving: boolean\n}\n\nexport const TopBar: FC<IAppTopBar> = ({ saving }) => {\n  return (\n    <Container>\n      <ThemeToggle />\n      <Loading display={saving} />\n    </Container>\n  )\n}\n","import React, { FC } from 'react'\n\nexport interface ILoadingDots {\n  fill?: string\n  className?: string\n}\n\nexport const LoadingDots: FC<ILoadingDots> = ({ fill = '#fff', className = '' }) => {\n  return (\n    <svg\n      viewBox=\"0 0 120 30\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      fill={fill}\n      className={className}\n    >\n      <circle cx=\"15\" cy=\"15\" r=\"15\">\n        <animate\n          attributeName=\"r\"\n          from=\"15\"\n          to=\"15\"\n          begin=\"0s\"\n          dur=\"0.8s\"\n          values=\"15;9;15\"\n          calcMode=\"linear\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"fill-opacity\"\n          from=\"1\"\n          to=\"1\"\n          begin=\"0s\"\n          dur=\"0.8s\"\n          values=\"1;.5;1\"\n          calcMode=\"linear\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n      <circle cx=\"60\" cy=\"15\" r=\"9\" fillOpacity=\"0.3\">\n        <animate\n          attributeName=\"r\"\n          from=\"9\"\n          to=\"9\"\n          begin=\"0s\"\n          dur=\"0.8s\"\n          values=\"9;15;9\"\n          calcMode=\"linear\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"fill-opacity\"\n          from=\"0.5\"\n          to=\"0.5\"\n          begin=\"0s\"\n          dur=\"0.8s\"\n          values=\".5;1;.5\"\n          calcMode=\"linear\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n      <circle cx=\"105\" cy=\"15\" r=\"15\">\n        <animate\n          attributeName=\"r\"\n          from=\"15\"\n          to=\"15\"\n          begin=\"0s\"\n          dur=\"0.8s\"\n          values=\"15;9;15\"\n          calcMode=\"linear\"\n          repeatCount=\"indefinite\"\n        />\n        <animate\n          attributeName=\"fill-opacity\"\n          from=\"1\"\n          to=\"1\"\n          begin=\"0s\"\n          dur=\"0.8s\"\n          values=\"1;.5;1\"\n          calcMode=\"linear\"\n          repeatCount=\"indefinite\"\n        />\n      </circle>\n    </svg>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport compose from 'lodash/flowRight'\nimport { MainContainer } from './layout'\nimport { ThemeManager } from './themes/ThemeManager'\nimport { NotesContainer } from './layout'\nimport { Slate, Editable, withReact } from 'slate-react'\nimport { useAppState, useSaveOnLocalStorage } from './hooks/storageHooks'\nimport { createEditor } from 'slate'\nimport { Element } from './editor/Element'\nimport { TopBar } from './AppTopBar'\nimport { withCheck } from './editor/withCheck'\nimport { useAndroidPlugin } from \"slate-android-plugin\";\n\nconst create = compose([withCheck, withReact, createEditor])\n\nconst useEditor = () => {\n  const editor = useMemo(() => create(), [])\n  return useAndroidPlugin(editor)\n}\n\nfunction App() {\n  const editor = useEditor()\n  const [value, setValue] = useAppState()\n  const { save, saving, flush } = useSaveOnLocalStorage()\n  const onChange = useCallback(\n    (next) => {\n      setValue(next)\n      save(next)\n    },\n    [setValue, save]\n  )\n  const onBlur = useCallback(() => {\n    flush()\n  }, [flush])\n  const renderElement = useCallback((props) => <Element {...props} />, [])\n  return (\n    <ThemeManager>\n      <MainContainer>\n        <TopBar saving={saving} />\n        <NotesContainer>\n          <Slate editor={editor} value={value} onChange={onChange}>\n            <Editable\n              renderElement={renderElement}\n              autoFocus\n              spellCheck\n              onBlur={onBlur}\n            />\n          </Slate>\n        </NotesContainer>\n      </MainContainer>\n    </ThemeManager>\n  )\n}\n\nexport default App\n","import { Editor, Range, Transforms, Path } from 'slate'\nimport { CustomElement, ElementType } from './interfaces'\n\nexport const withCheck = (editor: Editor) => {\n  const { insertBreak: defaultInsertBreak } = editor\n  editor.insertBreak = () => {\n    defaultInsertBreak()\n    const { selection } = editor\n    if (selection) {\n      const end = Range.end(selection)\n      const parentNodeEntry = Editor.parent(editor, end)\n      if (parentNodeEntry) {\n        const [parent, path]: [CustomElement, Path] = parentNodeEntry\n        if (parent.type === ElementType.Check) {\n          Transforms.setNodes(editor, { checked: false }, { at: path })\n        }\n      }\n    }\n  }\n  return editor\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport './fonts/fonts.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.register()\n"],"sourceRoot":""}